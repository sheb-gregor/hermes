api:
  host: 0.0.0.0
  port: 8090

enable_auth: true

authorized_services:
  exchange: env:EXCHANGE_HERMES_ACCESS_KEY

auth_providers:
  user:
    url: http://exchange:8080/v1/users/validate-session
    access_key: env:HERMES_AUTH_PROVIDER_ACCESS_KEY
    header: X-Api-Key
    allowed_roles:
      - user
  admin:
    url: http://exchange:8080/v1/users/validate-session
    access_key: env:HERMES_AUTH_PROVIDER_ACCESS_KEY
    header: X-Api-Key
    allowed_roles:
      - admin

log:
  app_name: hermes
  level: "env:HERMES_LOG_LEVEL"
  add_trace: true
  sentry: ""
  json: true

redis:
  dev_mode: false # when true, redis will be not used
  ping_interval: 60
  auth: "env:REDIS_PASSWORD"
  host: "redis:6379"
  record_ttl: 60
  max_idle: 5 # Maximum number of idle connections in the pool.
  max_active: 0 # When zero, there is no limit on the number of connections in the pool.

rabbit_mq:
  auth:
    create_exchanges: false
    strict_mode: false
    host: rabbitmq:5672
    user: "env:RABBITMQ_DEFAULT_USER"
    password: "env:RABBITMQ_DEFAULT_PASS"
    consumer_tag: hermes
  common:
    exchange: ctp.notifications.direct
    exchange_type: direct
  subs:
    - exchange: ctp.notifications.market_info
      exchange_type: fanout
      queue: ctp.hermes.market_info
    - exchange: ctp.notifications.orders
      exchange_type: fanout
      queue: ctp.hermes.orders
    - exchange: ctp.notifications.admin_updates
      exchange_type: fanout
      queue: ctp.hermes.admin_updates
    - exchange: ctp.notifications.user_updates
      exchange_type: fanout
      queue: ctp.hermes.user_updates
