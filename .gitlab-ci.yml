image: registry.gitlab.inn4science.com/deployments/go-builder/go-builder

services:
  - docker:dind

variables:
  PACKAGE_PATH: /go/src/gitlab.inn4science.com/ctp
  PROJECT_PATH: gitlab.inn4science.com/ctp/hermes
  GO111MODULE: 'on'

  REGISTRY: ${REGISTRY_URL}/${CI_PROJECT_NAMESPACE}
  REGISTRY_URL: registry.gitlab.inn4science.com
  PROD_PRIVATE_SSH_KEY: ${PROD_KEY}
  REGISTRY_SECRET: ${CI_BUILD_TOKEN}
  REGISTRY_LOGIN: gitlab-ci-token
  COMMIT: ${CI_COMMIT_SHA}

stages:
  - lint_check
  - unit_tests
  - build
  - deploy

linter_checking:
  stage: lint_check
  image: registry.gitlab.inn4science.com/deployments/go-linter
  before_script:
    - mkdir -p ${GOPATH}/src/${PROJECT_PATH}
    - cp -r . ${GOPATH}/src/${PROJECT_PATH}
    - cd ${GOPATH}/src/${PROJECT_PATH}
  script:
    - golangci-lint run --deadline=3m --skip-dirs scripts

unit_tests:
  stage: unit_tests
  image: golang:1.13-alpine3.10
  before_script:
    - mkdir -p ${GOPATH}/src/${PROJECT_PATH}
    - cp -r . ${GOPATH}/src/${PROJECT_PATH}
    - cd ${GOPATH}/src/${PROJECT_PATH}
    - apk add build-base
  script:
    - go test ./...

build:docker:
  stage: build
  script:
    - docker login -u ${REGISTRY_LOGIN} -p ${REGISTRY_SECRET} ${REGISTRY_URL}
    - TAG=$CI_COMMIT_REF_NAME
    - COMMIT=${CI_COMMIT_SHA:0:8}
    - IMAGE=${REGISTRY_URL}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/${CI_COMMIT_REF_NAME}:latest
    - docker build -f Dockerfile -t ${IMAGE} --build-arg COMMIT=$COMMIT --build-arg TAG=$TAG --build-arg CONFIG="${CI_COMMIT_REF_NAME}" .
    - docker push ${IMAGE}
  tags:
    - shell
  only:
    - master
    - stage


.SshKeyInception: &SshKeyInception
  before_script:
    - eval $(ssh-agent -s)
    - echo -e ${SSH_KEY} | base64 -d > /tmp/key
    - chmod 600 /tmp/key
    - ssh-add /tmp/key
    - mkdir -p ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config


.deploy:service: &DeployService
  image: registry.gitlab.inn4science.com/deployments/g-rsync
  <<: *SshKeyInception
  script:
    - echo ${DESTINATION}
    - ssh ${DESTINATION} "docker login -u gitlab-ci-token -p $CI_JOB_TOKEN ${CI_REGISTRY}"
    - ssh ${DESTINATION} "docker-compose -f ${COMPOSE_PATH}/docker-compose.yml pull ${MICROSERVICE}"
    - ssh ${DESTINATION} "docker-compose -f ${COMPOSE_PATH}/docker-compose.yml up -d ${MICROSERVICE}"

deploy:master:
  stage: deploy
  variables:
    DESTINATION: runner@${DEV_HOST}
    SSH_KEY: ${DEV_PRIVATE_SSH_KEY}
    COMPOSE_PATH: /opt/luxtrade
    MICROSERVICE: hermes
  <<: *DeployService
  tags:
    - shell
  only:
    - master

deploy:stage:
  stage: deploy
  variables:
    DESTINATION: runner@${STAGE_HOST}
    SSH_KEY: ${STAGE_PRIVATE_SSH_KEY}
    COMPOSE_PATH: /opt/luxtrade
    MICROSERVICE: hermes
  <<: *DeployService
  tags:
    - shell
  only:
    - stage
